version: '3.8'
services:
  # Сервис Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enrollment.enabled=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}  # Добавлен пароль по умолчанию
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
    healthcheck:  # Добавлен healthcheck для лучшего управления зависимостями
      test: ["CMD-SHELL", "curl -s -u elastic:${ELASTIC_PASSWORD:-changeme} http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Сервис Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic

  # Сервис для отправки логов (Python)
  log-sender:
    build: 
      context: ./log-sender  # Папка с Dockerfile для Python сервиса
      dockerfile: Dockerfile
    container_name: log-sender
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - LOG_LEVEL=INFO
      - SEND_INTERVAL=10  # Интервал отправки логов в секундах
    volumes:
      - ./logs:/app/logs  # Монтирование папки с логами (опционально)
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic
    restart: unless-stopped  # Автоматический перезапуск при падении

  # Опционально: Сервис для загрузки демо-данных
  elasticsearch-setup:
    image: curlimages/curl:latest
    container_name: es_setup
    command: >
      /bin/sh -c "
      echo 'Waiting for Elasticsearch to start...';
      until curl -s -u elastic:${ELASTIC_PASSWORD:-changeme} http://elasticsearch:9200 | grep -q 'missing authentication credentials'; do sleep 10; done;
      echo 'Elasticsearch is up!';
      echo 'Creating test index...';
      curl -X PUT -u elastic:${ELASTIC_PASSWORD:-changeme} 'http://elasticsearch:9200/test-logs' -H 'Content-Type: application/json' -d '{\"mappings\":{\"properties\":{\"timestamp\":{\"type\":\"date\"},\"level\":{\"type\":\"keyword\"},\"message\":{\"type\":\"text\"}}}}';
      echo 'Test index created!';
      "
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic

volumes:
  es_data:
    driver: local

networks:
  elastic:
    driver: bridge